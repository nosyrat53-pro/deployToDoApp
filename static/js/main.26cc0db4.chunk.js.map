{"version":3,"sources":["Components/AddTask.js","Components/Task.js","Components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","state","name","description","completed","handleChange","e","target","id","setState","value","handleSubmit","preventDefault","props","addTask","children","className","onSubmit","this","type","placeholder","required","onChange","handleSelect","React","Component","Task","tasks","console","log","mTasks","length","map","t","role","onClick","handleCompleted","deleteTask","Math","random","Footer","localStorage","getItem","setItem","JSON","stringify","App","parse","newtasks","forEach","ele","parentElement","firstElementChild","textContent","push","classList","add","setTimeout","task","index","element","i","remove","style","background","transform","alltasks","document","querySelector","tagName","removeChild","noItemsSentence","createElement","uncompleted","contains","display","prepend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.26cc0db4.chunk.js","sourcesContent":["import React , { Component } from 'react' ;\r\nimport './AddTask.css' ;\r\n\r\nclass AddTask extends React.Component {\r\n\r\n    state = {\r\n        name: '',\r\n        description: '',\r\n        completed: false\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        if(e.target.id == 'name'){\r\n            this.setState({\r\n                name: e.target.value,\r\n                completed: false\r\n            });\r\n        }else{\r\n            this.setState({\r\n                description: e.target.value ,\r\n                completed: false\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        e.preventDefault() ;\r\n\r\n        this.props.addTask(this.state) ;\r\n\r\n        e.target.children[0].value = '';\r\n\r\n        e.target.children[2].value = '';\r\n\r\n    }\r\n\r\n    \r\n    render(){\r\n\r\n        return(\r\n\r\n            <div className='AddTask-container'>\r\n                \r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"Task Name\"\r\n                id=\"name\"\r\n                required\r\n                onChange={this.handleChange}\r\n                />\r\n\r\n                <br></br>\r\n   \r\n                <textarea \r\n                placeholder=\"Task Description\"\r\n                id=\"desc\"\r\n                onChange={this.handleChange}    \r\n                />\r\n\r\n                <input type=\"submit\" value=\"Add Task\" />\r\n                    \r\n                </form>\r\n\r\n\r\n                    <select className=\"selection\" onChange={this.props.handleSelect}>\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"completed\">Completed</option>\r\n                        <option value=\"uncompleted\">UnCompleted</option>\r\n                    </select>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AddTask; ","import React, { Component , Fragment} from 'react' ;\r\nimport './Task.css' ;\r\n\r\n\r\nclass Task extends React.Component {\r\n\r\n    render(){\r\n\r\n        let {tasks} = this.props ;\r\n        console.log(tasks) ;\r\n            // console.log(this.props.completedtasks)\r\n\r\n        let mTasks = tasks.length !=0 ? tasks.map(t => {\r\n            if(t.completed == false ){\r\n                return(\r\n                    <div className=\"task-container\" key={Math.random()}>\r\n                        <h3 className=\"task-name\">{t.name}</h3>\r\n                        <p className=\"task-desc\">{t.description}</p>\r\n    \r\n                        <div className=\"buttons\">    \r\n                            \r\n                            <button \r\n                            role=\"button\" \r\n                            className=\"complete\"\r\n                            onClick={this.props.handleCompleted}>\r\n                                Completed\r\n                            </button>\r\n                            \r\n                            \r\n                            <button \r\n                            onClick={this.props.deleteTask} \r\n                            role=\"button\" \r\n                            className=\"delete\">\r\n                                Delete\r\n                            </button> \r\n    \r\n                        </div>\r\n                    </div>\r\n                )\r\n            }else{\r\n                return(\r\n                    <div className=\"task-container completed\" key={Math.random()}>\r\n                        <h3 className=\"task-name\">{t.name}</h3>\r\n                        <p className=\"task-desc\">{t.description}</p>\r\n    \r\n                        <div className=\"buttons\">    \r\n                            \r\n                            <button \r\n                            role=\"button\" \r\n                            className=\"complete\"\r\n                            onClick={this.props.handleCompleted}>\r\n                                UnCompleted\r\n                            </button>\r\n                            \r\n                           \r\n                            <button \r\n                            onClick={this.props.deleteTask} \r\n                            role=\"button\" \r\n                            className=\"delete  scale-0\">\r\n                                Delete\r\n                            </button> \r\n    \r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        }) : (\r\n            <div className='add'>ADD YOUR TASK NOW</div>\r\n        )\r\n        \r\n        return(\r\n            <div className=\"all-tasks\">\r\n                {mTasks}\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Task ;\r\n","import React , { Component } from 'react' ;\r\nimport './Footer.css' ;\r\n\r\nconst Footer = () => {\r\n\r\n    return(\r\n\r\n        <footer>\r\n\r\n            <div>\r\n                <p>To Do App Created By <span>Mohammed Al-Nosyrat</span></p>\r\n            </div>\r\n\r\n        </footer>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Footer ;","import React , {Component} from 'react' ;\nimport './App.css';\n\nimport AddTask from './Components/AddTask' ;\nimport Task from './Components/Task' ;\nimport Footer from './Components/Footer' ;\n\nif(localStorage.getItem('task') == null){\n\n  localStorage.setItem('task',JSON.stringify([]));\n  \n}\n\nclass App extends React.Component {\n\n  state = {\n    tasks: JSON.parse(localStorage.getItem('task'))    \n  }\n\n  deleteTask = (e) => {\n\n    let tasks = this.state.tasks ;\n    let newtasks = [] ;\n\n     tasks.forEach(function(ele){\n\n      if(ele.name !=  e.target.parentElement.parentElement.firstElementChild.textContent)\n\n        newtasks.push(ele) ;\n      \n\n    });\n\n    e.target.parentElement.parentElement.classList.add('delete-task')\n\n    setTimeout(() => {\n      this.setState({\n        tasks: newtasks \n      });\n    }, 400);\n\n\n  }\n\n  addTask = (task) => {\n\n    let newtasks = this.state.tasks ;\n    newtasks.push(task) ;\n      \n    this.setState({\n      tasks: newtasks\n    })\n\n  }\n\n  handleCompleted = (e) => {\n\n    if(e.target.textContent == 'Completed'){\n\n      let name = e.target.parentElement.parentElement.firstElementChild.textContent ;\n        \n      let newtasks = this.state.tasks ;\n\n      let mytask = newtasks.map(task => task.name == name ) ;\n\n      let index ;\n      \n      mytask.forEach( function(element , i ) {\n        if(element)\n          index = i \n      });\n\n      newtasks[index].completed = true ;\n       \n            this.setState({\n              tasks: newtasks \n            });\n      \n\n    }else{\n\n      let name = e.target.parentElement.parentElement.firstElementChild.textContent ;\n        \n      let newtasks = this.state.tasks ;\n\n      let mytask = newtasks.map(task => task.name == name ) ;\n\n      let index ;\n      \n      mytask.forEach( function(element , i ) {\n        if(element)\n          index = i \n      });\n\n      newtasks[index].completed = false ;\n       \n      // this.state.tasks = newtasks ;\n        this.setState({\n          tasks: newtasks\n        })\n      // console.log(this.state.tasks);\n\n      // escaping the effects from my task component\n        e.target.parentElement.parentElement.classList.remove('completed') ;\n        e.target.parentElement.parentElement.style.background = '#1ac69c' ;\n        e.target.parentElement.children[1].style.transform = 'scale(1)' ;\n        e.target.textContent = 'Completed';\n        \n    }\n\n}\n  \nhandleSelect = (e) => {\n\n  let alltasks = document.querySelector('.all-tasks') ;\n      \n  // if the first element was the h1 then remove it\n  if(alltasks.firstElementChild.tagName == 'H1' && alltasks.length > 1){\n\n    alltasks.removeChild(alltasks.firstElementChild);\n\n  }\n\n  let noItemsSentence = document.createElement('h1');\n  noItemsSentence.textContent = \"No Items To Show\" ;\n\n  let completed = [] ;\n  let uncompleted = [] ;\n\n  // fill the completed elements array\n  for(let i = 0 ; i < alltasks.children.length ; i++){\n\n      if(!alltasks.children[i].classList.contains('completed') ){\n\n        uncompleted.push(alltasks.children[i])\n      }\n\n    } \n\n    // fill the uncompleted elements array\n    for(let i = 0 ; i < alltasks.children.length ; i++){\n\n        if(alltasks.children[i].classList.contains('completed') ){\n\n          completed.push(alltasks.children[i])\n        }\n\n    } \n\n\n    // if the user choose the completed option  && alltasks.children[0].tagName != 'H1'\n  if(e.target.value == 'completed'){\n\n    \n    // if the first element was the h1 then remove it\n    if(alltasks.firstElementChild.tagName == 'H1'){\n\n      alltasks.removeChild(alltasks.firstElementChild);\n  \n    }\n\n    // put the display property of all task to block\n    for(let i = 0 ; i < alltasks.children.length ; i++){\n\n      alltasks.children[i].style.display = 'block' ;\n\n      }\n\n      // if there is no completed task\n      if(completed.length == 0 && !alltasks.firstElementChild.classList.contains('add')){\n        \n        for(let i = 0 ; i < uncompleted.length ; i++){\n          uncompleted[i].style.display = 'none' ;\n        }\n\n        alltasks.prepend(noItemsSentence) ;\n        console.log('completed')\n        // else if there is uncomplted tasks\n      }else{\n\n        for(let i = 0 ; i < uncompleted.length ; i++){\n\n          uncompleted[i].style.display = 'none' ;\n          \n        }\n\n        if(uncompleted.length > 0){\n          if(uncompleted[0].classList.contains('add')){\n            uncompleted[0].style.display = 'block'\n          }\n        }\n\n      }\n\n//////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////\n\n  }else if(e.target.value == 'uncompleted'){\n\n    // if the first element was the h1 then remove it\n    if(alltasks.firstElementChild.tagName == 'H1'){\n\n      alltasks.removeChild(alltasks.firstElementChild);\n  \n    }\n\n    // put the display property of all task to block\n    for(let i = 0 ; i < alltasks.children.length ; i++){\n\n      alltasks.children[i].style.display = 'block' ;\n\n    }\n\n      // if there is no uncompleted task\n      if(uncompleted.length == 0 ){\n\n        for(let i = 0 ; i < completed.length ; i++){\n          completed[i].style.display = 'none' ;\n        }\n\n        alltasks.prepend(noItemsSentence) ;\n        console.log('uncompleted')\n        // else if there is uncomplted tasks\n      }else{\n\n        for(let i = 0 ; i < completed.length ; i++){\n\n          completed[i].style.display = 'none' ;\n        }\n      }\n\n\n\n  }else{\n\n    // if the first element was the h1 then remove it\n    if(alltasks.firstElementChild.tagName == 'H1'){\n\n      alltasks.removeChild(alltasks.firstElementChild);\n  \n    }\n\n    // if the user click on the All option then i will display all tasks [completed and uncomplted]\n    for(let i = 0 ; i < alltasks.children.length ; i++){\n\n      alltasks.children[i].style.display = 'block' ;\n\n      } \n  }\n\n\n}\n\n  render(){\n    return(\n\n      <div className='App'>\n        <h1>ToDo App</h1>\n\n        <AddTask addTask={this.addTask} handleSelect={this.handleSelect}/>\n\n        <Task tasks={this.state.tasks} deleteTask={this.deleteTask} handleCompleted={this.handleCompleted}/>\n\n\n        <Footer />\n\n      </div>\n\n    )\n  }\n\n  componentDidUpdate(){\n\n    localStorage.setItem('task' , JSON.stringify(this.state.tasks))\n    \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}